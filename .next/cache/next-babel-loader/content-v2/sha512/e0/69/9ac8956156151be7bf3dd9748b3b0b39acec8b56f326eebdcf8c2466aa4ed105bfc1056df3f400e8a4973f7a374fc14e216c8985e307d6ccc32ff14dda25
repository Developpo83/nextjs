{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Coding\\\\React\\\\NEXT\\\\bigger-news-project\\\\pages\\\\index.js\";\nimport { MongoClient } from \"mongodb\"; //the import package in the serverd will not be part of the client side bundle, there will be two different indipendent bundle for server and client\n\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://media.istockphoto.com/photos/colosseum-in-rome-and-morning-sun-italy-picture-id539115110?k=6&m=539115110&s=612x612&w=0&h=qPtL_QLre-LJ1_HYrxtK_J_OnhKEMLFygB6YfIBda4s=\",\n  address: \"Some address 5 12345 Rome\",\n  description: \"this is a first meetup\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"https://www.ft.com/__origami/service/image/v2/images/raw/http%3A%2F%2Fcom.ft.imagepublish.upp-prod-us.s3.amazonaws.com%2Ffb181f10-4b77-11e9-bbc9-6917dce3dc62?fit=scale-down&source=next&width=700\",\n  address: \"Some address 10 67891 Florence\",\n  description: \"this is a second meetup\"\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://Luca:Nextjs83@cluster0.ryhfa.mongodb.net/meetups?retryWrites=true&w=majority\" // { useUnifiedTopology: true }\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\"); // once we do connect nd reach out the meetupsCollection we can use the find() method that by default returns all the documents\n\n  const meetups = await meetupsCollection.find().toArray(); //we get back an array of dicuments\n\n  client.close(); //close the connection with Mongodb\n\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS // fetched from Mongodb\n\n    },\n    revalidate: 1 // in secondi, 3600 per un'ora\n\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Coding/React/NEXT/bigger-news-project/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B,C,CAAuC;;AACvC,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACrB;AACCC,EAAAA,EAAE,EAAE,IADL;AAECC,EAAAA,KAAK,EAAE,gBAFR;AAGCC,EAAAA,KAAK,EACJ,+KAJF;AAKCC,EAAAA,OAAO,EAAE,2BALV;AAMCC,EAAAA,WAAW,EAAE;AANd,CADqB,EASrB;AACCJ,EAAAA,EAAE,EAAE,IADL;AAECC,EAAAA,KAAK,EAAE,iBAFR;AAGCC,EAAAA,KAAK,EACJ,oMAJF;AAKCC,EAAAA,OAAO,EAAE,gCALV;AAMCC,EAAAA,WAAW,EAAE;AANd,CATqB,CAAtB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACxB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACtC;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACpB,4FADoB,CAEpB;AAFoB,GAArB;AAKA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CARsC,CAUtC;;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB,CAZsC,CAYoB;;AAC1DN,EAAAA,MAAM,CAACO,KAAP,GAbsC,CAatB;;AAEhB,SAAO;AACNV,IAAAA,KAAK,EAAE;AACNC,MAAAA,OAAO,EAAER,aADH,CACkB;;AADlB,KADD;AAINkB,IAAAA,UAAU,EAAE,CAJN,CAIS;;AAJT,GAAP;AAMA;AAED,eAAeZ,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\"; //the import package in the serverd will not be part of the client side bundle, there will be two different indipendent bundle for server and client\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n\t{\r\n\t\tid: \"m1\",\r\n\t\ttitle: \"A First Meetup\",\r\n\t\timage:\r\n\t\t\t\"https://media.istockphoto.com/photos/colosseum-in-rome-and-morning-sun-italy-picture-id539115110?k=6&m=539115110&s=612x612&w=0&h=qPtL_QLre-LJ1_HYrxtK_J_OnhKEMLFygB6YfIBda4s=\",\r\n\t\taddress: \"Some address 5 12345 Rome\",\r\n\t\tdescription: \"this is a first meetup\",\r\n\t},\r\n\t{\r\n\t\tid: \"m2\",\r\n\t\ttitle: \"A Second Meetup\",\r\n\t\timage:\r\n\t\t\t\"https://www.ft.com/__origami/service/image/v2/images/raw/http%3A%2F%2Fcom.ft.imagepublish.upp-prod-us.s3.amazonaws.com%2Ffb181f10-4b77-11e9-bbc9-6917dce3dc62?fit=scale-down&source=next&width=700\",\r\n\t\taddress: \"Some address 10 67891 Florence\",\r\n\t\tdescription: \"this is a second meetup\",\r\n\t},\r\n];\r\n\r\nfunction HomePage(props) {\r\n\treturn <MeetupList meetups={props.meetups} />;\r\n}\r\n\r\nexport async function getStaticProps() {\r\n\t// fetch data from an API\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://Luca:Nextjs83@cluster0.ryhfa.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n\t\t// { useUnifiedTopology: true }\r\n\t);\r\n\r\n\tconst db = client.db();\r\n\tconst meetupsCollection = db.collection(\"meetups\");\r\n\r\n\t// once we do connect nd reach out the meetupsCollection we can use the find() method that by default returns all the documents\r\n\r\n\tconst meetups = await meetupsCollection.find().toArray(); //we get back an array of dicuments\r\n\tclient.close(); //close the connection with Mongodb\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetups: DUMMY_MEETUPS, // fetched from Mongodb\r\n\t\t},\r\n\t\trevalidate: 1, // in secondi, 3600 per un'ora\r\n\t};\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}