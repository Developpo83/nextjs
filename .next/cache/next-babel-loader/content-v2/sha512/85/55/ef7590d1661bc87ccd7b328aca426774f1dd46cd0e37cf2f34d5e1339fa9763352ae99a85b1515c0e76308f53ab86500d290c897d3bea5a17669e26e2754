{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Coding\\\\React\\\\NEXT\\\\bigger-news-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\"; //this is an object which allows us to connect\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://media.istockphoto.com/photos/colosseum-in-rome-and-morning-sun-italy-picture-id539115110?k=6&m=539115110&s=612x612&w=0&h=qPtL_QLre-LJ1_HYrxtK_J_OnhKEMLFygB6YfIBda4s=\",\n    title: \"A First Meetup\",\n    address: \"Some address 5 12345 Rome\",\n    description: \"this is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Luca:Nextjs83@cluster0.ryhfa.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: true,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for a single meetup\n  //(WE NEED TO IDENTIFY THAT MEETUP, WEE NEED ITS ID -> THE ID IS ENCODED INTO THE URL)\n  // WE CANNOT USE useRouter Hook (with its query property) here because we are not inside of the function component\n  // BUT I CAN USE THE CONTEXT PARAMETER WITH ITS PARAMS KEY (PROPERTY)\n  const meetupId = context.params.meetupId; //meetupId is the identifier I have between [] as page name\n\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: \"https://media.istockphoto.com/photos/colosseum-in-rome-and-morning-sun-italy-picture-id539115110?k=6&m=539115110&s=612x612&w=0&h=qPtL_QLre-LJ1_HYrxtK_J_OnhKEMLFygB6YfIBda4s=\",\n        title: \"A First Meetup\",\n        id: meetupId,\n        address: \"Some address 5 12345 Rome\",\n        description: \"this is a first meetup\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Coding/React/NEXT/bigger-news-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","props","meetupData","image","title","id","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B,C,CAAuC;;AAEvC,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACxB,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAC,+KADP;AAEC,IAAA,KAAK,EAAC,gBAFP;AAGC,IAAA,OAAO,EAAC,2BAHT;AAIC,IAAA,WAAW,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACtC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACpB,4FADoB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEA,SAAO;AACNC,IAAAA,QAAQ,EAAE,IADJ;AAENC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC/BC,MAAAA,MAAM,EAAE;AACPC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AADH;AADuB,KAAb,CAAZ;AAFD,GAAP;AAQA;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC7C;AACA;AACA;AACA;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAN6C,CAMH;;AAE1CI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,SAAO;AACNM,IAAAA,KAAK,EAAE;AACNC,MAAAA,UAAU,EAAE;AACXC,QAAAA,KAAK,EACJ,+KAFU;AAGXC,QAAAA,KAAK,EAAE,gBAHI;AAIXC,QAAAA,EAAE,EAAEV,QAJO;AAKXW,QAAAA,OAAO,EAAE,2BALE;AAMXC,QAAAA,WAAW,EAAE;AANF;AADN;AADD,GAAP;AAYA;AAED,eAAe5B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\"; //this is an object which allows us to connect\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails() {\r\n\treturn (\r\n\t\t<MeetupDetail\r\n\t\t\timage=\"https://media.istockphoto.com/photos/colosseum-in-rome-and-morning-sun-italy-picture-id539115110?k=6&m=539115110&s=612x612&w=0&h=qPtL_QLre-LJ1_HYrxtK_J_OnhKEMLFygB6YfIBda4s=\"\r\n\t\t\ttitle=\"A First Meetup\"\r\n\t\t\taddress=\"Some address 5 12345 Rome\"\r\n\t\t\tdescription=\"this is a first meetup\"\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://Luca:Nextjs83@cluster0.ryhfa.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n\t);\r\n\r\n\tconst db = client.db();\r\n\tconst meetupsCollection = db.collection(\"meetups\");\r\n\r\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n\treturn {\r\n\t\tfallback: true,\r\n\t\tpaths: meetups.map((meetup) => ({\r\n\t\t\tparams: {\r\n\t\t\t\tmeetupId: meetup._id.toString(),\r\n\t\t\t},\r\n\t\t})),\r\n\t};\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n\t//fetch data for a single meetup\r\n\t//(WE NEED TO IDENTIFY THAT MEETUP, WEE NEED ITS ID -> THE ID IS ENCODED INTO THE URL)\r\n\t// WE CANNOT USE useRouter Hook (with its query property) here because we are not inside of the function component\r\n\t// BUT I CAN USE THE CONTEXT PARAMETER WITH ITS PARAMS KEY (PROPERTY)\r\n\r\n\tconst meetupId = context.params.meetupId; //meetupId is the identifier I have between [] as page name\r\n\r\n\tconsole.log(meetupId);\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: {\r\n\t\t\t\timage:\r\n\t\t\t\t\t\"https://media.istockphoto.com/photos/colosseum-in-rome-and-morning-sun-italy-picture-id539115110?k=6&m=539115110&s=612x612&w=0&h=qPtL_QLre-LJ1_HYrxtK_J_OnhKEMLFygB6YfIBda4s=\",\r\n\t\t\t\ttitle: \"A First Meetup\",\r\n\t\t\t\tid: meetupId,\r\n\t\t\t\taddress: \"Some address 5 12345 Rome\",\r\n\t\t\t\tdescription: \"this is a first meetup\",\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}