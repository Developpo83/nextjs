{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Coding\\\\React\\\\NEXT\\\\bigger-news-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\"; //this is an object which allows us to connect\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Luca:Nextjs83@cluster0.ryhfa.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: true,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId; //meetupId is the identifier I have between [] as page name which refers a dynamic name/id\n\n  const client = await MongoClient.connect(\"mongodb+srv://Luca:Nextjs83@cluster0.ryhfa.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\"); // get access to the collection\n  // now I want to get access to a single meetup\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  }); //se l'id pescato dal mongodb servere = all'id letto sulla barra indirizzi..\n  // const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup // {\n      // \timage:\n      // \t\t\"https://media.istockphoto.com/photos/colosseum-in-rome-and-morning-sun-italy-picture-id539115110?k=6&m=539115110&s=612x612&w=0&h=qPtL_QLre-LJ1_HYrxtK_J_OnhKEMLFygB6YfIBda4s=\",\n      // \ttitle: \"A First Meetup\",\n      // \tid: meetupId,\n      // \taddress: \"Some address 5 12345 Rome\",\n      // \tdescription: \"this is a first meetup\",\n      // },\n\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Coding/React/NEXT/bigger-news-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B,C,CAAuC;;AAEvC,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC7B,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADzB;AAEC,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFzB;AAGC,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH3B;AAIC,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ/B;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACtC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACpB,4FADoB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACNC,IAAAA,QAAQ,EAAE,IADJ;AAENC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC/BC,MAAAA,MAAM,EAAE;AACPC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADH;AADuB,KAAb,CAAZ;AAFD,GAAP;AAQA;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC7C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAD6C,CACH;;AAE1C,QAAMf,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACpB,4FADoB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAR6C,CAQO;AACpD;;AACA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEQ;AAAP,GAA1B,CAA7B,CAV6C,CAU8B;AAE3E;;AACAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACNhB,IAAAA,KAAK,EAAE;AACNC,MAAAA,UAAU,EAAEyB,cADN,CAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AATM;AADD,GAAP;AAaA;AAED,eAAe3B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\"; //this is an object which allows us to connect\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails(props) {\r\n\treturn (\r\n\t\t<MeetupDetail\r\n\t\t\timage={props.meetupData.image}\r\n\t\t\ttitle={props.meetupData.title}\r\n\t\t\taddress={props.meetupData.address}\r\n\t\t\tdescription={props.meetupData.description}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://Luca:Nextjs83@cluster0.ryhfa.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n\t);\r\n\r\n\tconst db = client.db();\r\n\tconst meetupsCollection = db.collection(\"meetups\");\r\n\r\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tfallback: true,\r\n\t\tpaths: meetups.map((meetup) => ({\r\n\t\t\tparams: {\r\n\t\t\t\tmeetupId: meetup._id.toString(),\r\n\t\t\t},\r\n\t\t})),\r\n\t};\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n\tconst meetupId = context.params.meetupId; //meetupId is the identifier I have between [] as page name which refers a dynamic name/id\r\n\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://Luca:Nextjs83@cluster0.ryhfa.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n\t);\r\n\r\n\tconst db = client.db();\r\n\tconst meetupsCollection = db.collection(\"meetups\"); // get access to the collection\r\n\t// now I want to get access to a single meetup\r\n\tconst selectedMeetup = await meetupsCollection.findOne({ _id: meetupId }); //se l'id pescato dal mongodb servere = all'id letto sulla barra indirizzi..\r\n\r\n\t// const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: selectedMeetup,\r\n\t\t\t// {\r\n\t\t\t// \timage:\r\n\t\t\t// \t\t\"https://media.istockphoto.com/photos/colosseum-in-rome-and-morning-sun-italy-picture-id539115110?k=6&m=539115110&s=612x612&w=0&h=qPtL_QLre-LJ1_HYrxtK_J_OnhKEMLFygB6YfIBda4s=\",\r\n\t\t\t// \ttitle: \"A First Meetup\",\r\n\t\t\t// \tid: meetupId,\r\n\t\t\t// \taddress: \"Some address 5 12345 Rome\",\r\n\t\t\t// \tdescription: \"this is a first meetup\",\r\n\t\t\t// },\r\n\t\t},\r\n\t};\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}