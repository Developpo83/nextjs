{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Coding\\\\React\\\\NEXT\\\\bigger-news-project\\\\pages\\\\[meetupId]\\\\index.js\";\n//this is an object which allows us to connect\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  // i props li prende da sotto, in questa stesssa pagina, è cio che ritorna getStaticProps(context)\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Coding/React/NEXT/bigger-news-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAAiD;AAEjD,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC7B;AACA,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADzB;AAEC,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFzB;AAGC,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH3B;AAIC,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ/B;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;;KAVQN,a;;AA4DT,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\"; //this is an object which allows us to connect\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails(props) {\r\n\t// i props li prende da sotto, in questa stesssa pagina, è cio che ritorna getStaticProps(context)\r\n\treturn (\r\n\t\t<MeetupDetail\r\n\t\t\timage={props.meetupData.image}\r\n\t\t\ttitle={props.meetupData.title}\r\n\t\t\taddress={props.meetupData.address}\r\n\t\t\tdescription={props.meetupData.description}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://Luca:Nextjs83@cluster0.ryhfa.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n\t);\r\n\r\n\tconst db = client.db();\r\n\tconst meetupsCollection = db.collection(\"meetups\");\r\n\r\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tfallback: true,\r\n\t\tpaths: meetups.map((meetup) => ({\r\n\t\t\tparams: {\r\n\t\t\t\tmeetupId: meetup._id.toString(),\r\n\t\t\t},\r\n\t\t})),\r\n\t};\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n\tconst meetupId = context.params.meetupId; //meetupId is the identifier I have between [] as page name which refers a dynamic name/id\r\n\r\n\tconst client = await MongoClient.connect(\r\n\t\t\"mongodb+srv://Luca:Nextjs83@cluster0.ryhfa.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n\t);\r\n\r\n\tconst db = client.db();\r\n\tconst meetupsCollection = db.collection(\"meetups\"); // get access to the collection\r\n\t// now I want to get access to a single meetup\r\n\tconst selectedMeetup = await meetupsCollection.findOne({\r\n\t\t_id: ObjectId(meetupId), //will convert the string meetupId into such a BSON objectId object (POI DOBBIAMO convertire IN STRINGA questa proprietà _id dell'oggetto selectedMeetup)\r\n\t}); //se l'id pescato dal mongodb servere = all'id letto sulla barra indirizzi..\r\n\r\n\t// const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\t// per precaricare sul server, assieme alla struttura HTML del sito, nella pagina da scaricare subito e da mostrare per motori ricerca (SEO) dei dati attraverso i props\r\n\t\tprops: {\r\n\t\t\tmeetupData: {\r\n\t\t\t\tid: selectedMeetup._id.toString(),\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}